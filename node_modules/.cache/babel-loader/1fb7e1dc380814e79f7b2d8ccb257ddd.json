{"ast":null,"code":"let myHeaders = new Headers({\n  'Access-Control-Allow-Origin': '*',\n  'Content-Type': 'multipart/form-data'\n});\nvar myInit = {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'cors',\n  cache: 'default'\n};\n\nconst getConnection = async (dispatch, authParam) => {\n  dispatch({\n    type: \"ITEMS_IS_FAILED\",\n    payload: false\n  });\n  dispatch({\n    type: \"SET_AUTH\",\n    payload: {\n      error: true,\n      message: \"\",\n      session: \"\"\n    }\n  });\n  dispatch({\n    type: \"ITEMS_IS_LOADING\",\n    payload: true\n  });\n\n  try {\n    const proxyurl = \"https://shielded-brushlands-73771.herokuapp.com/\";\n    const auth = `https://www.myfxbook.com/api/login.json?email=${authParam.login}&password=${authParam.password}`;\n    const api_call = await fetch( // `https://www.myfxbook.com/api/login.json?email=${\n    // \tauthParam.login\n    // }&password=${authParam.password}`\n    proxyurl + auth, myInit);\n    const data = await api_call.json();\n    console.log(\"data:\", data);\n\n    if (data.error) {\n      dispatch({\n        type: \"ITEMS_IS_LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ITEMS_IS_FAILED\",\n        payload: true\n      });\n      dispatch({\n        type: \"DIALOG_OPEN\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: \"ITEMS_IS_LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ITEMS_IS_FAILED\",\n        payload: false\n      });\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: data\n      });\n      console.log(\"data.session=\", data.session);\n      getDataAvait(dispatch, data.session);\n    }\n  } catch (e) {\n    // statements\n    dispatch({\n      type: \"ITEMS_IS_LOADING\",\n      payload: false\n    });\n    console.log(e);\n  }\n};\n\nconst getDataAvait = async (dispatch, query) => {\n  dispatch({\n    type: \"ITEMS_IS_FAILED\",\n    payload: false\n  });\n  dispatch({\n    type: \"LOAD_DATA\",\n    payload: []\n  });\n  dispatch({\n    type: \"ITEMS_IS_LOADING\",\n    payload: true\n  });\n\n  try {\n    const proxyurl = \"https://shielded-brushlands-73771.herokuapp.com/\";\n    const url = `https://www.myfxbook.com/api/get-community-outlook.json?session=${query}`;\n    const api_call = await fetch(proxyurl + url //\t\t`https://www.myfxbook.com/api/get-community-outlook.json?session=${query}`\n    , myInit);\n    const data = await api_call.json();\n    console.log(\"data:\", data);\n\n    if (data.error) {\n      dispatch({\n        type: \"ITEMS_IS_LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ITEMS_IS_FAILED\",\n        payload: true\n      });\n      dispatch({\n        type: \"DIALOG_OPEN\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: \"ITEMS_IS_LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ITEMS_IS_FAILED\",\n        payload: false\n      });\n      dispatch({\n        type: \"LOAD_DATA\",\n        payload: data.symbols\n      });\n    }\n  } catch (e) {\n    // statements\n    dispatch({\n      type: \"ITEMS_IS_LOADING\",\n      payload: false\n    });\n    console.log(e);\n  }\n};\n\nexport default {\n  getConnection,\n  getDataAvait\n};","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Tools/api.js"],"names":["myHeaders","Headers","myInit","method","headers","mode","cache","getConnection","dispatch","authParam","type","payload","error","message","session","proxyurl","auth","login","password","api_call","fetch","data","json","console","log","getDataAvait","e","query","url","symbols"],"mappings":"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","sourcesContent":["\r\nlet myHeaders = new Headers({\r\n    'Access-Control-Allow-Origin':'*',\r\n    'Content-Type': 'multipart/form-data'\r\n});\r\nvar myInit = { method: 'GET',\r\n               headers: myHeaders,\r\n               mode: 'cors',\r\n               cache: 'default' };\r\n\r\n\r\n\r\nconst getConnection = async (dispatch, authParam) => {\r\n\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: false });\r\n\tdispatch({\r\n\t\ttype: \"SET_AUTH\",\r\n\t\tpayload: { error: true, message: \"\", session: \"\" }\r\n\t});\r\n\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: true });\r\n\r\n\ttry {\r\n\t\tconst proxyurl = \"https://shielded-brushlands-73771.herokuapp.com/\";\r\n\t\tconst auth = `https://www.myfxbook.com/api/login.json?email=${authParam.login}&password=${authParam.password}`;\r\n\t\tconst api_call = await fetch(\r\n\t\t\t// `https://www.myfxbook.com/api/login.json?email=${\r\n\t\t\t// \tauthParam.login\r\n\t\t\t// }&password=${authParam.password}`\r\n\t\t\tproxyurl+auth\r\n\t\t,myInit);\r\n\t\tconst data = await api_call.json();\r\n\t\tconsole.log(\"data:\", data);\r\n\t\tif (data.error) {\r\n\t\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\t\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: true });\r\n\t\t\tdispatch({ type: \"DIALOG_OPEN\", payload: true });\r\n\t\t\tdispatch({ type: \"SET_AUTH\", payload: data });\r\n\t\t} else {\r\n\t\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\t\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: false });\r\n\t\t\tdispatch({ type: \"SET_AUTH\", payload: data });\r\n\t\t\tconsole.log(\"data.session=\", data.session);\r\n\t\t\tgetDataAvait(dispatch, data.session);\r\n\t\t}\r\n\t} catch (e) {\r\n\t\t// statements\r\n\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\nconst getDataAvait = async (dispatch, query) => {\r\n\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: false });\r\n\tdispatch({ type: \"LOAD_DATA\", payload: [] });\r\n\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: true });\r\n\r\n\ttry {\r\n\t\tconst proxyurl = \"https://shielded-brushlands-73771.herokuapp.com/\";\r\n\t\tconst url=`https://www.myfxbook.com/api/get-community-outlook.json?session=${query}`\r\n\t\tconst api_call = await fetch(\r\n\t\t\tproxyurl + url\r\n\t//\t\t`https://www.myfxbook.com/api/get-community-outlook.json?session=${query}`\r\n\t\t\t,myInit\r\n\t\t);\r\n\t\tconst data = await api_call.json();\r\n\t\tconsole.log(\"data:\", data);\r\n\t\tif (data.error) {\r\n\t\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\t\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: true });\r\n\t\t\tdispatch({ type: \"DIALOG_OPEN\", payload: true });\r\n\t\t\tdispatch({ type: \"SET_AUTH\", payload: data });\r\n\t\t} else {\r\n\t\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\t\tdispatch({ type: \"ITEMS_IS_FAILED\", payload: false });\r\n\t\t\tdispatch({ type: \"LOAD_DATA\", payload: data.symbols });\r\n\t\t}\r\n\t} catch (e) {\r\n\t\t// statements\r\n\t\tdispatch({ type: \"ITEMS_IS_LOADING\", payload: false });\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\nexport default{\r\n\tgetConnection,\r\n\tgetDataAvait\r\n}"]},"metadata":{},"sourceType":"module"}