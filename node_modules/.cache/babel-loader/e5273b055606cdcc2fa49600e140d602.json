{"ast":null,"code":"var _jsxFileName = \"H:\\\\Licenta\\\\my-app\\\\src\\\\components\\\\Plans\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport app from 'firebase/app';\n\nfunction Plans() {\n  const db = app.firestore();\n  const storageRef = app.storage().ref(); //   storageRef.child('/Profile.jpg').getDownloadURL().then(function(geturl) {\n  //   // `url` is the download URL for 'images/stars.jpg'\n  //   // This can be downloaded directly:\n  //   var xhr = new XMLHttpRequest();\n  //   xhr.responseType = 'blob';\n  //   xhr.onload = function(event) {\n  //     var blob = xhr.response;\n  //   };\n  //   xhr.open('GET', geturl);\n  //   xhr.send();\n  //   // Or inserted into an <img> element:\n  //   var img = document.getElementById('myimg');\n  //   img.src = geturl;\n  // }).catch(function(error) {\n  //   // Handle any errors\n  // });\n\n  const [fileUrl, setFileUrl] = React.useState(null);\n  const [users, setUsers] = React.useState([]);\n\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    const storageRef = app.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileUrl(await fileRef.getDownloadURL());\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = e.target.username.value;\n\n    if (!username) {\n      return;\n    }\n\n    db.collection(\"users\").doc(username).set({\n      name: username,\n      avatar: fileUrl\n    });\n  };\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const usersCollection = await db.collection('users').get();\n      setUsers(usersCollection.docs.map(doc => {\n        return doc.data();\n      }));\n    };\n\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"gs://academie-90dfd.appspot.com/combinepdf.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"download\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, users.map(user => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"100\",\n      height: \"100\",\n      src: user.avatar,\n      alt: user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, user.name));\n  })));\n}\n\nexport default Plans;","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Plans/index.js"],"names":["React","useEffect","app","Plans","db","firestore","storageRef","storage","ref","fileUrl","setFileUrl","useState","users","setUsers","onFileChange","e","file","target","files","fileRef","child","name","put","getDownloadURL","onSubmit","preventDefault","username","value","collection","doc","set","avatar","fetchUsers","usersCollection","get","docs","map","data","user"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport app from 'firebase/app';\r\n\r\n \r\nfunction Plans () {\r\n  const db = app.firestore()\r\n  const storageRef = app.storage().ref()\r\n\r\n//   storageRef.child('/Profile.jpg').getDownloadURL().then(function(geturl) {\r\n//   // `url` is the download URL for 'images/stars.jpg'\r\n\r\n//   // This can be downloaded directly:\r\n//   var xhr = new XMLHttpRequest();\r\n//   xhr.responseType = 'blob';\r\n//   xhr.onload = function(event) {\r\n//     var blob = xhr.response;\r\n//   };\r\n//   xhr.open('GET', geturl);\r\n//   xhr.send();\r\n\r\n//   // Or inserted into an <img> element:\r\n//   var img = document.getElementById('myimg');\r\n//   img.src = geturl;\r\n// }).catch(function(error) {\r\n//   // Handle any errors\r\n// });\r\n\r\n\r\n  const [fileUrl, setFileUrl] = React.useState(null)\r\n  const [users, setUsers] = React.useState([])\r\n\r\n  const onFileChange = async(e) => {\r\n    const file = e.target.files[0]\r\n    const storageRef = app.storage().ref()\r\n    const fileRef = storageRef.child(file.name)\r\n    await fileRef.put(file)\r\n    setFileUrl(await fileRef.getDownloadURL())\r\n \r\n  }\r\n\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault()\r\n    const username = e.target.username.value;\r\n    if(!username){\r\n      return\r\n    }\r\n    db.collection(\"users\").doc(username).set({\r\n      name: username,\r\n      avatar: fileUrl\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersCollection = await db.collection('users').get()\r\n      setUsers(usersCollection.docs.map(doc => {\r\n        return doc.data()\r\n      }))\r\n    }\r\n    fetchUsers()\r\n  }, [])\r\n\r\n\r\n  return(\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"file\" onChange={onFileChange}/>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Name\"/>\r\n        <button>Submit</button>\r\n      </form>\r\n      <form >\r\n        <button><a href={\"gs://academie-90dfd.appspot.com/combinepdf.pdf\"}>download</a></button>\r\n      </form>\r\n      <ul>\r\n          {users.map((user) => {\r\n            return (\r\n            <li key={user.name}>\r\n              <img width=\"100\" height=\"100\" src={user.avatar} alt={user.name}/>\r\n              <p>{user.name}</p>\r\n              </li>\r\n          );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Plans;"]},"metadata":{},"sourceType":"module"}