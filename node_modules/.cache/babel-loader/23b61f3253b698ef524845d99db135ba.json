{"ast":null,"code":"var _jsxFileName = \"H:\\\\Licenta\\\\my-app\\\\src\\\\components\\\\Plans\\\\PaymentForm.js\";\nimport React, { useEffect, useContext } from 'react';\nimport 'react-bootstrap/dist/react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport { PaymentContext } from '../PaymentContext';\n\nconst PaymentForm = props => {\n  const paymentContext = useContext(PaymentContext);\n  const {\n    tokenObject,\n    paymentTransaction,\n    isPaymentMade,\n    setIsPaymentMade,\n    transactionData,\n    setTransactionData\n  } = paymentContext;\n  useEffect(() => {\n    renderPayment();\n  });\n\n  const renderPayment = () => {\n    let token = tokenObject;\n    let authorization = token;\n    var form = document.querySelector('#cardForm');\n    window.braintree.client.create({\n      authorization: authorization\n    }, (err, clientInstance) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      createHostedFields(clientInstance, form);\n    });\n\n    const createHostedFields = (clientInstance, form) => {\n      window.braintree.hostedFields.create({\n        client: clientInstance,\n        styles: {\n          'input': {\n            'font-size': '16px',\n            'font-family': 'courier, monospace',\n            'font-weight': 'lighter',\n            'color': '#ccc'\n          },\n          ':focus': {\n            'color': 'black'\n          },\n          '.valid': {\n            'color': '#8bdda8'\n          }\n        },\n        fields: {\n          number: {\n            selector: '#card-number',\n            placeholder: '4111 1111 1111 1111'\n          },\n          cvv: {\n            selector: '#cvv',\n            placeholder: '123'\n          },\n          expirationDate: {\n            selector: '#expiration-date',\n            placeholder: 'MM/YYYY'\n          },\n          postalCode: {\n            selector: '#postal-code',\n            placeholder: '11111'\n          }\n        }\n      }, function (err, hostedFieldsInstance) {\n        var teardown = function (event) {\n          event.preventDefault();\n          var formIsInvalid = false;\n          var state = hostedFieldsInstance.getState(); // Loop through the Hosted Fields and check\n          // for validity, apply the is-invalid class\n          // to the field container if invalid\n\n          Object.keys(state.fields).forEach(function (field) {\n            if (!state.fields[field].isValid) {\n              $(state.fields[field].container).addClass('is-invalid');\n              formIsInvalid = true;\n            }\n          });\n\n          if (formIsInvalid) {\n            // skip tokenization request if any fields are invalid\n            alert(\"Card input is not valid\");\n            return;\n          }\n\n          hostedFieldsInstance.tokenize({\n            // include the cardholderName in the tokenization\n            // request\n            cardholderName: $('#cc-name').val()\n          }, function (err, payload) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n\n            console.log(payload.nonce);\n            paymentTransaction({\n              nonce: payload.nonce,\n              amount: 100.00\n            }); // This is where you would submit payload.nonce to your server\n          });\n        };\n\n        form.addEventListener('submit', teardown, false);\n      });\n    };\n  };\n\n  const onCancelPayment = () => {};\n\n  const gotoPayment = () => {\n    setIsPaymentMade(false);\n    setTransactionData({});\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isPaymentMade ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"demo-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Server returns \", transactionData.success ? 'with success' : 'with failure', \" with below data\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Amount: \", transactionData.transaction !== undefined ? transactionData.transaction.amount : 'N/A', \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 117\n    }\n  }), \"PaymentInstrumentType = \", transactionData.transaction !== undefined ? transactionData.transaction.paymentInstrumentType : 'N/A', \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 148\n    }\n  }), \"Status                = \", transactionData.transaction !== undefined ? transactionData.transaction.status : 'N/A', \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 133\n    }\n  }), \"Transaction id        = \", transactionData.transaction !== undefined ? transactionData.transaction.id : 'N/A', \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 129\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn btn-primary\",\n    onClick: gotoPayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Go back to payment page\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"demo-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    submit: \"/\",\n    method: \"post\",\n    id: \"cardForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"hosted-fields--label\",\n    for: \"card-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"card-number\",\n    className: \"hosted-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"hosted-fields--label\",\n    for: \"expiration-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Expiration Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"expiration-date\",\n    className: \"hosted-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"hosted-fields--label\",\n    for: \"cvv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"CVV\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cvv\",\n    className: \"hosted-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"hosted-fields--label\",\n    for: \"postal-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"postal-code\",\n    className: \"hosted-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      marginRight: 2 + 'px'\n    },\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Purchase\",\n    id: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      marginRight: 2 + 'px'\n    },\n    className: \"btn btn-warning\",\n    onClick: onCancelPayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))));\n};\n\nexport default PaymentForm;","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Plans/PaymentForm.js"],"names":["React","useEffect","useContext","$","PaymentContext","PaymentForm","props","paymentContext","tokenObject","paymentTransaction","isPaymentMade","setIsPaymentMade","transactionData","setTransactionData","renderPayment","token","authorization","form","document","querySelector","window","braintree","client","create","err","clientInstance","console","log","createHostedFields","hostedFields","styles","fields","number","selector","placeholder","cvv","expirationDate","postalCode","hostedFieldsInstance","teardown","event","preventDefault","formIsInvalid","state","getState","Object","keys","forEach","field","isValid","container","addClass","alert","tokenize","cardholderName","val","payload","error","nonce","amount","addEventListener","onCancelPayment","gotoPayment","success","transaction","undefined","paymentInstrumentType","status","id","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from 'react'\r\nimport 'react-bootstrap/dist/react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport $ from 'jquery';\r\nimport {PaymentContext} from '../PaymentContext';\r\n\r\nconst PaymentForm = (props) =>\r\n{\r\n    const paymentContext = useContext(PaymentContext);\r\n    const {tokenObject, paymentTransaction, isPaymentMade, setIsPaymentMade, transactionData, setTransactionData} = paymentContext;\r\n    \r\n    useEffect(()=> {\r\n        renderPayment();\r\n        \r\n    });\r\n\r\n    const renderPayment = ()=> {\r\n        let token = tokenObject;\r\n        let authorization = token;\r\n        var form = document.querySelector('#cardForm');\r\n        window.braintree.client.create({\r\n            authorization: authorization\r\n        }, (err, clientInstance)=> {\r\n        if(err){\r\n            console.log(err);\r\n            return;\r\n        }\r\n        createHostedFields(clientInstance, form);\r\n        });\r\n\r\n        const createHostedFields = (clientInstance, form) => {\r\n        window.braintree.hostedFields.create({\r\n            client: clientInstance,\r\n            styles: {\r\n                'input': {\r\n                'font-size': '16px',\r\n                'font-family': 'courier, monospace',\r\n                'font-weight': 'lighter',\r\n                'color': '#ccc'\r\n                },\r\n                ':focus': {\r\n                'color': 'black'\r\n                },\r\n                '.valid': {\r\n                'color': '#8bdda8'\r\n                }\r\n            },\r\n            fields: {\r\n                number: {\r\n                selector: '#card-number',\r\n                placeholder: '4111 1111 1111 1111'\r\n                },\r\n                cvv: {\r\n                selector: '#cvv',\r\n                placeholder: '123'\r\n                },\r\n                expirationDate: {\r\n                selector: '#expiration-date',\r\n                placeholder: 'MM/YYYY'\r\n                },\r\n                postalCode: {\r\n                selector: '#postal-code',\r\n                placeholder: '11111'\r\n                }\r\n            }\r\n            }, function (err, hostedFieldsInstance) {\r\n                var teardown = function (event) {\r\n\r\n                    event.preventDefault();\r\n\r\n                    var formIsInvalid = false;\r\n                    var state = hostedFieldsInstance.getState();\r\n\r\n                    // Loop through the Hosted Fields and check\r\n                    // for validity, apply the is-invalid class\r\n                    // to the field container if invalid\r\n                    Object.keys(state.fields).forEach(function(field) {\r\n                        if (!state.fields[field].isValid) {\r\n                            $(state.fields[field].container).addClass('is-invalid');\r\n                            formIsInvalid = true;\r\n                        }\r\n                    });\r\n\r\n                    if (formIsInvalid) {\r\n                        // skip tokenization request if any fields are invalid\r\n                        alert(\"Card input is not valid\");\r\n                        return;\r\n                    }\r\n\r\n                    hostedFieldsInstance.tokenize({\r\n                        // include the cardholderName in the tokenization\r\n                        // request\r\n                        cardholderName: $('#cc-name').val()\r\n                        }, \r\n                        function(err, payload) {\r\n                            if (err) {\r\n                                console.error(err);\r\n                                return;\r\n                            }\r\n\r\n                            console.log(payload.nonce);\r\n                            paymentTransaction({nonce: payload.nonce, amount: 100.00});\r\n                            // This is where you would submit payload.nonce to your server\r\n                        }\r\n                    );\r\n                    \r\n            };\r\n            \r\n            form.addEventListener('submit', teardown, false);\r\n            });\r\n          }\r\n    }\r\n\r\n    const onCancelPayment = ()=>{\r\n\r\n    }\r\n\r\n    const gotoPayment = ()=>{\r\n        setIsPaymentMade(false);\r\n        setTransactionData({});\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            {isPaymentMade? \r\n            <div className=\"demo-frame\">\r\n                <h3>Server returns {transactionData.success ? 'with success' : 'with failure'} with below data</h3>\r\n                <div>\r\n                    Amount: {transactionData.transaction !== undefined ? transactionData.transaction.amount: 'N/A'} <br></br>\r\n                    PaymentInstrumentType = {transactionData.transaction !== undefined ? transactionData.transaction.paymentInstrumentType: 'N/A'} <br></br>\r\n                    Status                = {transactionData.transaction !== undefined ? transactionData.transaction.status: 'N/A'} <br></br>\r\n                    Transaction id        = {transactionData.transaction !== undefined ? transactionData.transaction.id: 'N/A'} <br></br>\r\n                </div>\r\n                <div>\r\n                    <a className=\"btn btn-primary\" onClick={gotoPayment}>Go back to payment page</a>\r\n                </div>\r\n            </div> :\r\n            \r\n                <div className=\"demo-frame\">  \r\n                    <form submit=\"/\" method=\"post\" id=\"cardForm\" >\r\n                        <label className=\"hosted-fields--label\" for=\"card-number\">Card Number</label>\r\n                        <div id=\"card-number\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\" for=\"expiration-date\">Expiration Date</label>\r\n                        <div id=\"expiration-date\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\" for=\"cvv\">CVV</label>\r\n                        <div id=\"cvv\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\" for=\"postal-code\">Postal Code</label>\r\n                        <div id=\"postal-code\" className=\"hosted-field\"></div>\r\n\r\n                        <div className=\"button-container\">\r\n                            <input style={{marginRight: 2 + 'px'}} type=\"submit\" className=\"btn btn-primary\" value=\"Purchase\" id=\"submit\"/>\r\n                            &nbsp;<a style={{marginRight: 2 + 'px'}} className=\"btn btn-warning\" onClick={onCancelPayment}>Cancel</a> \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default PaymentForm;"]},"metadata":{},"sourceType":"module"}