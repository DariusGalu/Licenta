{"ast":null,"code":"var _jsxFileName = \"H:\\\\Licenta\\\\my-app\\\\src\\\\components\\\\Tools\\\\TableView.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst copyKey = obj => {\n  var copy = [];\n  var i = 0;\n\n  for (var key in obj) {\n    copy[i] = key;\n    i++;\n  }\n\n  return copy;\n};\n\nconst TableView = props => {\n  let clone = copyKey(props.extData[0]);\n  let tableCeil;\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, clone.map((prop, id) => {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, prop);\n  })), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, props.extData.map((data, id) => {\n    {\n      let tableStr = [];\n      clone.map((prop, idx) => {\n        if (typeof data[prop] === \"number\") {\n          tableCeil = /*#__PURE__*/React.createElement(TableCell, {\n            numeric: true,\n            key: idx,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 22\n            }\n          }, data[prop]);\n        } else if (typeof data[prop] === \"string\") {\n          tableCeil = /*#__PURE__*/React.createElement(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            key: idx,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 22\n            }\n          }, data[prop]);\n        }\n\n        return tableStr.push(tableCeil);\n      });\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, tableStr);\n    }\n  })));\n};\n\nconst MapStateToProps = state => {\n  return {\n    authParam: state.authParam,\n    extData: state.extData,\n    isLoading: state.itemsIsLoading,\n    isFailed: state.itemsIsFailed,\n    dialogOpen: state.dialogOpen,\n    authData: state.authData\n  };\n};\n\nexport default connect(MapStateToProps)(TableView);","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Tools/TableView.js"],"names":["React","connect","Table","TableBody","TableCell","TableHead","TableRow","copyKey","obj","copy","i","key","TableView","props","clone","extData","tableCeil","map","prop","id","data","tableStr","idx","push","MapStateToProps","state","authParam","isLoading","itemsIsLoading","isFailed","itemsIsFailed","dialogOpen","authData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACtB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAK,IAAIC,GAAT,IAAgBH,GAAhB,EAAqB;AACpBC,IAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,GAAV;AACAD,IAAAA,CAAC;AACD;;AACD,SAAOD,IAAP;AACA,CARD;;AASA,MAAMG,SAAS,GAAGC,KAAK,IAAI;AAC1B,MAAIC,KAAK,GAAGP,OAAO,CAACM,KAAK,CAACE,OAAN,CAAc,CAAd,CAAD,CAAnB;AACA,MAAIC,SAAJ;AACA,sBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,EAAP,KAAc;AACxB,wBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,IAArB,CAAP;AACA,GAFA,CADF,CADD,eAMC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,KAAK,CAACE,OAAN,CAAcE,GAAd,CAAkB,CAACG,IAAD,EAAMD,EAAN,KAAa;AAC/B;AACC,UAAIE,QAAQ,GAAG,EAAf;AACAP,MAAAA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMI,GAAN,KAAc;AACvB,YAAI,OAAOF,IAAI,CAACF,IAAD,CAAX,KAAsB,QAA1B,EAAoC;AACnCF,UAAAA,SAAS,gBAAI,oBAAC,SAAD;AAAY,YAAA,OAAO,MAAnB;AAAoB,YAAA,GAAG,EAAEM,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCF,IAAI,CAACF,IAAD,CAApC,CAAb;AACA,SAFD,MAGK,IAAI,OAAOE,IAAI,CAACF,IAAD,CAAX,KAAsB,QAA1B,EAAoC;AACxCF,UAAAA,SAAS,gBAAI,oBAAC,SAAD;AAAW,YAAA,SAAS,EAAC,IAArB;AAA0B,YAAA,KAAK,EAAC,KAAhC;AAAsC,YAAA,GAAG,EAAEM,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiDF,IAAI,CAACF,IAAD,CAArD,CAAb;AACA;;AACD,eAAOG,QAAQ,CAACE,IAAT,CAAcP,SAAd,CAAP;AACA,OARD;AASA,0BAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBE,QAApB,CAAP;AACA;AACD,GAdA,CADF,CAND,CADD;AA0BA,CA7BD;;AA+BA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADX;AAENX,IAAAA,OAAO,EAAEU,KAAK,CAACV,OAFT;AAGNY,IAAAA,SAAS,EAAEF,KAAK,CAACG,cAHX;AAINC,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,aAJV;AAKNC,IAAAA,UAAU,EAAEN,KAAK,CAACM,UALZ;AAMNC,IAAAA,QAAQ,EAAEP,KAAK,CAACO;AANV,GAAP;AAQA,CATD;;AAWA,eAAe/B,OAAO,CAACuB,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst copyKey = obj => {\r\n\tvar copy = [];\r\n\tvar i = 0;\r\n\tfor (var key in obj) {\r\n\t\tcopy[i] = key;\r\n\t\ti++;\r\n\t}\r\n\treturn copy;\r\n};\r\nconst TableView = props => {\r\n\tlet clone = copyKey(props.extData[0]);\r\n\tlet tableCeil;\r\n\treturn (\r\n\t\t<Table>\r\n\t\t\t<TableHead>\r\n\t\t\t\t{clone.map((prop, id) => {\r\n\t\t\t\t\treturn <TableCell key={id}>{prop}</TableCell>;\r\n\t\t\t\t})}\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>\r\n\t\t\t\t{props.extData.map((data,id) => {\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet tableStr = [];\r\n\t\t\t\t\t\tclone.map((prop,idx) => {\r\n\t\t\t\t\t\t\tif (typeof data[prop] === \"number\") {\r\n\t\t\t\t\t\t\t\ttableCeil = (<TableCell  numeric key={idx} >{data[prop]}</TableCell>);\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\telse if (typeof data[prop] === \"string\") {\r\n\t\t\t\t\t\t\t\ttableCeil = (<TableCell component=\"th\" scope=\"row\" key={idx}>{data[prop]}</TableCell>);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tableStr.push(tableCeil);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn <TableRow key={id}>{tableStr}</TableRow>;\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</TableBody>\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nconst MapStateToProps = state => {\r\n\treturn {\r\n\t\tauthParam: state.authParam,\r\n\t\textData: state.extData,\r\n\t\tisLoading: state.itemsIsLoading,\r\n\t\tisFailed: state.itemsIsFailed,\r\n\t\tdialogOpen: state.dialogOpen,\r\n\t\tauthData: state.authData\r\n\t};\r\n};\r\n\r\nexport default connect(MapStateToProps)(TableView);"]},"metadata":{},"sourceType":"module"}