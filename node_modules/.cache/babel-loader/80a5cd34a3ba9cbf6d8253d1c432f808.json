{"ast":null,"code":"var _jsxFileName = \"H:\\\\Licenta\\\\my-app\\\\src\\\\components\\\\Plans\\\\PaymentContext.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { Urls } from './Urls';\nimport axios from 'axios';\nconst PaymentContext = createContext();\n\nconst PaymentProvider = props => {\n  const [tokenObject, setTokenObject] = useState({});\n  const [isPaymentMade, setIsPaymentMade] = useState(false);\n  const [transactionData, setTransactionData] = useState({});\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  const getToken = async () => {\n    let result = await axios(Urls.InitializeUrl, {\n      withCredentials: true\n    });\n    const tokenObject = result.data.data;\n    setTokenObject(tokenObject);\n  };\n\n  const paymentTransaction = async data => {\n    console.log(Urls.ConfirmUrl);\n    let result = await axios.post(Urls.ConfirmUrl, data, {\n      withCredentials: true\n    });\n    setTransactionData(result.data.data);\n    setIsPaymentMade(true);\n  };\n\n  return /*#__PURE__*/React.createElement(PaymentContext.Provider, {\n    value: {\n      tokenObject,\n      paymentTransaction,\n      isPaymentMade,\n      setIsPaymentMade,\n      transactionData,\n      setTransactionData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default {\n  PaymentProvider,\n  PaymentContext\n};","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Plans/PaymentContext.js"],"names":["React","createContext","useEffect","useState","Urls","axios","PaymentContext","PaymentProvider","props","tokenObject","setTokenObject","isPaymentMade","setIsPaymentMade","transactionData","setTransactionData","getToken","result","InitializeUrl","withCredentials","data","paymentTransaction","console","log","ConfirmUrl","post","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEC,MAAMC,cAAc,GAAGL,aAAa,EAApC;;AAEA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAE9B,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAK,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAK,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAArD;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXa,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAW;AACzB,QAAIC,MAAM,GAAG,MAAMX,KAAK,CAACD,IAAI,CAACa,aAAN,EAAqB;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAArB,CAAxB;AACA,UAAMT,WAAW,GAAGO,MAAM,CAACG,IAAP,CAAYA,IAAhC;AACAT,IAAAA,cAAc,CAACD,WAAD,CAAd;AACF,GAJD;;AAMA,QAAMW,kBAAkB,GAAG,MAAOD,IAAP,IAAgB;AACvCE,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACmB,UAAjB;AACA,QAAIP,MAAM,GAAG,MAAMX,KAAK,CAACmB,IAAN,CAAWpB,IAAI,CAACmB,UAAhB,EAA4BJ,IAA5B,EAAkC;AAACD,MAAAA,eAAe,EAAE;AAAlB,KAAlC,CAAnB;AACAJ,IAAAA,kBAAkB,CAACE,MAAM,CAACG,IAAP,CAAYA,IAAb,CAAlB;AACAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEH,GAND;;AAQA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACH,MAAAA,WAAD;AAAcW,MAAAA,kBAAd;AAAkCT,MAAAA,aAAlC;AAAiDC,MAAAA,gBAAjD;AAAmEC,MAAAA,eAAnE;AAAoFC,MAAAA;AAApF,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACiB,QADX,CADJ;AAKH,CA7BA;;AA+BD,eAAe;AAAClB,EAAAA,eAAD;AAAkBD,EAAAA;AAAlB,CAAf","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\r\nimport {Urls} from './Urls';\r\nimport axios from 'axios';\r\n\r\n const PaymentContext = createContext();\r\n\r\n const PaymentProvider = props => {\r\n\r\n    const[tokenObject, setTokenObject] = useState({});\r\n    const[isPaymentMade, setIsPaymentMade] = useState(false);\r\n    const[transactionData, setTransactionData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        getToken();\r\n    }, []);\r\n\r\n    const getToken = async ()=> {\r\n       let result = await axios(Urls.InitializeUrl, {withCredentials: true})\r\n       const tokenObject = result.data.data;\r\n       setTokenObject(tokenObject);\r\n    }\r\n\r\n    const paymentTransaction = async (data) => {\r\n        console.log(Urls.ConfirmUrl);\r\n        let result = await axios.post(Urls.ConfirmUrl, data, {withCredentials: true});\r\n        setTransactionData(result.data.data);\r\n        setIsPaymentMade(true);\r\n        \r\n    }\r\n\r\n    return(\r\n        <PaymentContext.Provider value={{tokenObject, paymentTransaction, isPaymentMade, setIsPaymentMade, transactionData, setTransactionData}}>\r\n            {props.children}\r\n        </PaymentContext.Provider>\r\n    );\r\n}\r\n\r\nexport default {PaymentProvider, PaymentContext};"]},"metadata":{},"sourceType":"module"}