{"ast":null,"code":"var _jsxFileName = \"H:\\\\Licenta\\\\my-app\\\\src\\\\components\\\\Plans\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { View, Button } from 'react-native';\nimport { utils } from 'firebase/app';\nimport 'firebase/storage';\nconst reference = storage().ref('/images/t-shirts/black-t-shirt-sm.png');\nconst task = reference.putFile(pathToFile);\ntask.on('state_changed', taskSnapshot => {\n  console.log(`${taskSnapshot.bytesTransferred} transferred out of ${taskSnapshot.totalBytes}`);\n});\ntask.then(() => {\n  console.log('Image uploaded to the bucket!');\n});\n\nfunction Plans() {\n  // create bucket storage reference to not yet existing image\n  const reference = storage().ref('black-t-shirt-sm.png');\n  return /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onPress: async () => {\n      // path to existing file on filesystem\n      const pathToFile = `${utils.FilePath.PICTURES_DIRECTORY}/black-t-shirt-sm.png`; // uploads file\n\n      await reference.putFile(pathToFile);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Plans; // import React, { useEffect } from 'react';\n// import app from 'firebase/app';\n// function Plans () {\n//   const db = app.firestore()\n//   const [fileUrl, setFileUrl] = React.useState(null)\n//   const [users, setUsers] = React.useState([])\n//   const onFileChange = async(e) => {\n//     const file = e.target.files[0]\n//     const storageRef = app.storage().ref()\n//     const fileRef = storageRef.child(file.name)\n//     await fileRef.put(file)\n//     setFileUrl(await fileRef.getDownloadURL())\n//   }\n//   const onSubmit = (e) =>{\n//     e.preventDefault()\n//     const username = e.target.username.value;\n//     if(!username){\n//       return\n//     }\n//     db.collection(\"users\").doc(username).set({\n//       name: username,\n//       avatar: fileUrl\n//     })\n//   }\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       const usersCollection = await db.collection('users').get()\n//       setUsers(usersCollection.docs.map(doc => {\n//         return doc.data()\n//       }))\n//     }\n//     fetchUsers()\n//   }, [])\n//   return(\n//     <>\n//       <form onSubmit={onSubmit}>\n//         <input type=\"file\" onChange={onFileChange}/>\n//         <input type=\"text\" name=\"username\" placeholder=\"Name\"/>\n//         <button>Submit</button>  \n//       </form>\n//       <ul>\n//           {users.map((user) => {\n//             return (\n//             <li key={user.name}>\n//               <img width=\"100\" height=\"100\" src={user.avatar} alt={user.name}/>\n//               <p>{user.name}</p>\n//               </li>\n//           );\n//           })}\n//       </ul>\n//     </>\n//   );\n// }\n// export default Plans;","map":{"version":3,"sources":["H:/Licenta/my-app/src/components/Plans/index.js"],"names":["React","useEffect","View","Button","utils","reference","storage","ref","task","putFile","pathToFile","on","taskSnapshot","console","log","bytesTransferred","totalBytes","then","Plans","FilePath","PICTURES_DIRECTORY"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,cAA7B;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,kBAAP;AAGA,MAAMC,SAAS,GAAGC,OAAO,GAAGC,GAAV,CAAc,uCAAd,CAAlB;AAEA,MAAMC,IAAI,GAAGH,SAAS,CAACI,OAAV,CAAkBC,UAAlB,CAAb;AAEAF,IAAI,CAACG,EAAL,CAAQ,eAAR,EAAyBC,YAAY,IAAI;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,YAAY,CAACG,gBAAiB,uBAAsBH,YAAY,CAACI,UAAW,EAA3F;AACD,CAFD;AAIAR,IAAI,CAACS,IAAL,CAAU,MAAM;AACdJ,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,CAFD;;AAIA,SAASI,KAAT,GAAiB;AACf;AACA,QAAMb,SAAS,GAAGC,OAAO,GAAGC,GAAV,CAAc,sBAAd,CAAlB;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,YAAY;AACnB;AACA,YAAMG,UAAU,GAAI,GAAEN,KAAK,CAACe,QAAN,CAAeC,kBAAmB,uBAAxD,CAFmB,CAGnB;;AACA,YAAMf,SAAS,CAACI,OAAV,CAAkBC,UAAlB,CAAN;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD;;AAED,eAAeQ,KAAf,C,CAgBA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, Button } from 'react-native';\r\n\r\nimport { utils } from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst reference = storage().ref('/images/t-shirts/black-t-shirt-sm.png');\r\n\r\nconst task = reference.putFile(pathToFile);\r\n\r\ntask.on('state_changed', taskSnapshot => {\r\n  console.log(`${taskSnapshot.bytesTransferred} transferred out of ${taskSnapshot.totalBytes}`);\r\n});\r\n\r\ntask.then(() => {\r\n  console.log('Image uploaded to the bucket!');\r\n});\r\n\r\nfunction Plans() {\r\n  // create bucket storage reference to not yet existing image\r\n  const reference = storage().ref('black-t-shirt-sm.png');\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        onPress={async () => {\r\n          // path to existing file on filesystem\r\n          const pathToFile = `${utils.FilePath.PICTURES_DIRECTORY}/black-t-shirt-sm.png`;\r\n          // uploads file\r\n          await reference.putFile(pathToFile);\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Plans;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import app from 'firebase/app';\r\n\r\n \r\n// function Plans () {\r\n//   const db = app.firestore()\r\n\r\n//   const [fileUrl, setFileUrl] = React.useState(null)\r\n//   const [users, setUsers] = React.useState([])\r\n\r\n//   const onFileChange = async(e) => {\r\n//     const file = e.target.files[0]\r\n//     const storageRef = app.storage().ref()\r\n//     const fileRef = storageRef.child(file.name)\r\n//     await fileRef.put(file)\r\n//     setFileUrl(await fileRef.getDownloadURL())\r\n \r\n//   }\r\n\r\n//   const onSubmit = (e) =>{\r\n//     e.preventDefault()\r\n//     const username = e.target.username.value;\r\n//     if(!username){\r\n//       return\r\n//     }\r\n//     db.collection(\"users\").doc(username).set({\r\n//       name: username,\r\n//       avatar: fileUrl\r\n//     })\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       const usersCollection = await db.collection('users').get()\r\n//       setUsers(usersCollection.docs.map(doc => {\r\n//         return doc.data()\r\n//       }))\r\n//     }\r\n//     fetchUsers()\r\n//   }, [])\r\n\r\n\r\n//   return(\r\n//     <>\r\n//       <form onSubmit={onSubmit}>\r\n//         <input type=\"file\" onChange={onFileChange}/>\r\n//         <input type=\"text\" name=\"username\" placeholder=\"Name\"/>\r\n//         <button>Submit</button>  \r\n//       </form>\r\n//       <ul>\r\n//           {users.map((user) => {\r\n//             return (\r\n//             <li key={user.name}>\r\n//               <img width=\"100\" height=\"100\" src={user.avatar} alt={user.name}/>\r\n//               <p>{user.name}</p>\r\n//               </li>\r\n//           );\r\n//           })}\r\n//       </ul>\r\n//     </>\r\n//   );\r\n// }\r\n \r\n// export default Plans;"]},"metadata":{},"sourceType":"module"}